### Courses API Test Requests for Rest Client

### 1. CREATE Course (POST)
POST http://localhost:3000/api/courses
Content-Type: application/json

{
  "name": "Linear Algebra"
}

###

### 2. GET All Courses
GET http://localhost:3000/api/courses
Content-Type: application/json

###

### 3. GET Single Course (replace {courseId} with actual ID from CREATE response)
GET http://localhost:3000/api/courses/686dc6e711fc765e359f4e05
Content-Type: application/json

###

### 4. UPDATE Course (replace {courseId} with actual ID)
PATCH http://localhost:3000/api/courses/686dc6e711fc765e359f4e05
Content-Type: application/json

{
  "name": "Advanced JavaScript Programming"
}

###

### 5. DELETE Course (replace {courseId} with actual ID)
DELETE http://localhost:3000/api/courses/686dc6e711fc765e359f4e05
Content-Type: application/json

###

### 6. Test with invalid ID (should return 404)
GET http://localhost:3000/api/courses/64f8a1b2c3d4e5f678901234
Content-Type: application/json

###

### 7. Create another course for testing
POST http://localhost:3000/api/courses
Content-Type: application/json

{
  "name": "React Fundamentals"
}

###

### 8. Create course with empty name (should fail validation)
POST http://localhost:3000/api/courses
Content-Type: application/json

{
  "name": ""
}

###

### 9. Upload a file to a course (replace {courseId} with actual ID)
POST http://localhost:3000/api/v1/files/687d98971725a357a30573c8/resources/upload
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="test.txt"
Content-Type: text/plain

This is a test file content.
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 10. Get all resources for a course
GET http://localhost:3000/api/v1/files/{courseId}/resources

### 11. Get a specific resource
GET http://localhost:3000/api/v1/files/{courseId}/resources/test.txt

### 12. Update resource name
PATCH http://localhost:3000/api/v1/files/{courseId}/resources/test.txt
Content-Type: application/json

{
  "newName": "updated-test.txt"
}

### 13. Delete a resource
DELETE http://localhost:3000/api/v1/files/{courseId}/resources/test.txt